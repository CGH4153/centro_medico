
### This is an auto-generated test suite, it needs to be completed with valid data.
### These are not all tests you need, more of them should be created to evaluate the functional
### requirements of your project. These tests only test the CRUD endpoints of the entity.
### Silence is a DEAL research team project, more info about us in https://deal.us.es
@BASE = http://127.0.0.1:8089/api/v1

### Auxiliary query
### Positive test
### Test 00: Get all existing turnos
### This query is used in several of the below tests it should be executed first.
# @name turnos
GET {{BASE}}/turnos

### Login a(n) pacientes and save the generated token 
### This token is used in several of the below tests it should be executed second.
# @name login
POST {{BASE}}/login 
Content-Type: application/json 

{ 
	"dni": ###REPLACE###,
	"contrasena": ###REPLACE###
}

###
@token = {{login.response.body.sessionToken}}


### TESTS BEGIN

### Test 01: Get one existing turnos by its id.
### positive test 
@turId = {{turnos.response.body.0.id}}
GET {{BASE}}/turnos/{{turId}} 
Content-Type: application/json 


### Test 02: Try get one existing turnos by its nonexistent id.
### negative test 
GET {{BASE}}/turnos/999999999
Content-Type: application/json 


### Test 03: Add a new turnos successfully
### Positive test 
### We assume that the token has been aquired by the login request.
# @name newturnos
POST {{BASE}}/turnos 
Content-Type: application/json 
Token: {{token}} 

{
	"fecha_comienzo": ###REPLACE###,
	"hora_inicio": ###REPLACE###,
	"hora_fin": ###REPLACE###,
	"fecha_fin": ###REPLACE###,
	"dias_ap": ###REPLACE###,
	"vacaciones": ###REPLACE###,
	"id_paciente": ###REPLACE###
} 

### Check the created turnos

@newturnosid = {{newturnos.response.body.lastId}}
GET {{BASE}}/turnos/{{newturnosid}}
Content-Type: application/json 

### Test 04: Add a new turnos without a session token
### Negative test 
POST {{BASE}}/turnos 
Content-Type: application/json 

{ 
	"fecha_comienzo": ###REPLACE###,
	"hora_inicio": ###REPLACE###,
	"hora_fin": ###REPLACE###,
	"fecha_fin": ###REPLACE###,
	"dias_ap": ###REPLACE###,
	"vacaciones": ###REPLACE###,
	"id_paciente": ###REPLACE###
}

### Test 05: Modify an existing turnos 
### Positive test 
@turId = {{turnos.response.body.0.id}} 
PUT {{BASE}}/turnos/{{turId}} 
Content-Type: application/json 
Token: {{token}} 

{ 
	"fecha_comienzo": ###REPLACE###,
	"hora_inicio": ###REPLACE###,
	"hora_fin": ###REPLACE###,
	"fecha_fin": ###REPLACE###,
	"dias_ap": ###REPLACE###,
	"vacaciones": ###REPLACE###,
	"id_paciente": ###REPLACE###
}

### Check the modified turnos

GET {{BASE}}/turnos/{{newturnosid}}
Content-Type: application/json 

### Test 06: Try to modify an existing turnos without a session token
### Negative test
@turId = {{turnos.response.body.0.id}}
PUT {{BASE}}/turnos/{{turId}}
Content-Type: application/json

{
	"fecha_comienzo": ###REPLACE###,
	"hora_inicio": ###REPLACE###,
	"hora_fin": ###REPLACE###,
	"fecha_fin": ###REPLACE###,
	"dias_ap": ###REPLACE###,
	"vacaciones": ###REPLACE###,
	"id_paciente": ###REPLACE###
}

### Test 07: Delete an existing turnos
### Positive test

### Create a new turnos, which we will delete
# @name createdturToDelete
POST {{BASE}}/turnos
Content-Type: application/json
Token: {{token}}

{
	"fecha_comienzo": ###REPLACE###,
	"hora_inicio": ###REPLACE###,
	"hora_fin": ###REPLACE###,
	"fecha_fin": ###REPLACE###,
	"dias_ap": ###REPLACE###,
	"vacaciones": ###REPLACE###,
	"id_paciente": ###REPLACE###
}

### Check the created turnos
@turdelId = {{createdturToDelete.response.body.lastId}}
GET {{BASE}}/turnos/{{turdelId}}
Content-Type: application/json 

### Delete the turnos
DELETE {{BASE}}/turnos/{{turdelId}}
Token: {{token}}

### Check the deleted turnos
GET {{BASE}}/turnos/{{turdelId}}
Content-Type: application/json 

### Test 08: Try to delete a turnos without a session token
### Negative test
DELETE {{BASE}}/turnos/{{turId}}

