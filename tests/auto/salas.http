
### This is an auto-generated test suite, it needs to be completed with valid data.
### These are not all tests you need, more of them should be created to evaluate the functional
### requirements of your project. These tests only test the CRUD endpoints of the entity.
### Silence is a DEAL research team project, more info about us in https://deal.us.es
@BASE = http://127.0.0.1:8089/api/v1

### Auxiliary query
### Positive test
### Test 00: Get all existing salas
### This query is used in several of the below tests it should be executed first.
# @name salas
GET {{BASE}}/salas

### Login a(n) pacientes and save the generated token 
### This token is used in several of the below tests it should be executed second.
# @name login
POST {{BASE}}/login 
Content-Type: application/json 

{ 
	"dni": ###REPLACE###,
	"contrasena": ###REPLACE###
}

###
@token = {{login.response.body.sessionToken}}


### TESTS BEGIN

### Test 01: Get one existing salas by its id.
### positive test 
@salId = {{salas.response.body.0.id}}
GET {{BASE}}/salas/{{salId}} 
Content-Type: application/json 


### Test 02: Try get one existing salas by its nonexistent id.
### negative test 
GET {{BASE}}/salas/999999999
Content-Type: application/json 


### Test 03: Add a new salas successfully
### Positive test 
### We assume that the token has been aquired by the login request.
# @name newsalas
POST {{BASE}}/salas 
Content-Type: application/json 
Token: {{token}} 

{
	"edificio": ###REPLACE###,
	"planta": ###REPLACE###,
	"puerta": ###REPLACE###,
	"ocupacion": ###REPLACE###
} 

### Check the created salas

@newsalasid = {{newsalas.response.body.lastId}}
GET {{BASE}}/salas/{{newsalasid}}
Content-Type: application/json 

### Test 04: Add a new salas without a session token
### Negative test 
POST {{BASE}}/salas 
Content-Type: application/json 

{ 
	"edificio": ###REPLACE###,
	"planta": ###REPLACE###,
	"puerta": ###REPLACE###,
	"ocupacion": ###REPLACE###
}

### Test 05: Modify an existing salas 
### Positive test 
@salId = {{salas.response.body.0.id}} 
PUT {{BASE}}/salas/{{salId}} 
Content-Type: application/json 
Token: {{token}} 

{ 
	"edificio": ###REPLACE###,
	"planta": ###REPLACE###,
	"puerta": ###REPLACE###,
	"ocupacion": ###REPLACE###
}

### Check the modified salas

GET {{BASE}}/salas/{{newsalasid}}
Content-Type: application/json 

### Test 06: Try to modify an existing salas without a session token
### Negative test
@salId = {{salas.response.body.0.id}}
PUT {{BASE}}/salas/{{salId}}
Content-Type: application/json

{
	"edificio": ###REPLACE###,
	"planta": ###REPLACE###,
	"puerta": ###REPLACE###,
	"ocupacion": ###REPLACE###
}

### Test 07: Delete an existing salas
### Positive test

### Create a new salas, which we will delete
# @name createdsalToDelete
POST {{BASE}}/salas
Content-Type: application/json
Token: {{token}}

{
	"edificio": ###REPLACE###,
	"planta": ###REPLACE###,
	"puerta": ###REPLACE###,
	"ocupacion": ###REPLACE###
}

### Check the created salas
@saldelId = {{createdsalToDelete.response.body.lastId}}
GET {{BASE}}/salas/{{saldelId}}
Content-Type: application/json 

### Delete the salas
DELETE {{BASE}}/salas/{{saldelId}}
Token: {{token}}

### Check the deleted salas
GET {{BASE}}/salas/{{saldelId}}
Content-Type: application/json 

### Test 08: Try to delete a salas without a session token
### Negative test
DELETE {{BASE}}/salas/{{salId}}

